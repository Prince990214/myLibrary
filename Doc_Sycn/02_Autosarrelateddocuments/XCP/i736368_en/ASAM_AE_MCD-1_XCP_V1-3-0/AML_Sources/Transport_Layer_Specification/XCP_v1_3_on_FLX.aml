/***********************************************************/
/*                                                         */
/*   ASAP2 meta language for XCP on FLX V1.3               */
/*                                                         */
/*                                                         */
/*   Datatypes:                                            */
/*                                                         */
/*   A2ML       description                                */
/*   ---------------------------------------------------   */
/*   uchar      unsigned 8 Bit                             */
/*   char       signed 8 Bit                               */
/*   uint       unsigned integer 16 Bit                    */
/*   int        signed integer 16 Bit                      */
/*   ulong      unsigned integer 32 Bit                    */
/*   long       signed integer 32 Bit                      */
/*   int64      signed integer 64 Bit                      */
/*   uint64     unsigned integer 64 Bit                    */
/*   float      float point 32 Bit IEEE 754                */
/*   double     float point 64 Bit IEEE 754                */
/*                                                         */
/***********************************************************/

/************************ start of FLX *********************/

enum packet_assignment_type {
  "NOT_ALLOWED",
  "FIXED",
  "VARIABLE_INITIALISED",
  "VARIABLE"
};                               /* end of packet_assignment_type */

struct buffer {

  uchar;                         /* FLX_BUF */

  taggedstruct {

    "MAX_FLX_LEN_BUF" taggedunion {
      "FIXED" uchar;             /* constant value */
      "VARIABLE" uchar;          /* initial value */
    };                           /* end of MAX_FLX_LEN_BUF */

    block "LPDU_ID" taggedstruct {

      "FLX_SLOT_ID" taggedunion {
        "FIXED" uint;
        "VARIABLE" taggedstruct{
          "INITIAL_VALUE" uint;
        };
      };                         /* end of FLX_SLOT_ID */

      "OFFSET" taggedunion {
        "FIXED" uchar;
        "VARIABLE" taggedstruct{
          "INITIAL_VALUE" uchar;
        };
      };                         /* end of OFFSET */

      "CYCLE_REPETITION" taggedunion {
        "FIXED" uchar;
        "VARIABLE" taggedstruct{
          "INITIAL_VALUE" uchar;
        };
      };                         /* end of CYCLE_REPETITION */

      "CHANNEL" taggedunion {
        "FIXED" enum {
          "A" = 0,
          "B" = 1
        };
        "VARIABLE" taggedstruct{
          "INITIAL_VALUE" enum {
            "A" = 0,
            "B" = 1
          };
        };
      };                         /* end of CHANNEL */

    };                           /* end of LPDU_ID */

    block "XCP_PACKET" taggedstruct {

      "CMD" enum packet_assignment_type;
      "RES_ERR" enum packet_assignment_type;
      "EV_SERV" enum packet_assignment_type;
      "DAQ" enum packet_assignment_type;
      "STIM" enum packet_assignment_type;
      "MULTICAST" enum packet_assignment_type;

    };                           /* end of XCP_PACKET */
  };

};                               /* end of buffer */

struct FLX_Parameters {

  uint;                          /* XCP on FlexRay version */
                                 /* "1.3" = 0x0103 */

  uint;                          /* T1_FLX [ms] */

  char[256];                     /* FIBEX-file including CHI information */
                                 /* including extension */
                                 /* without path */

  char[256];                     /* Cluster-ID */

  uchar;                         /* NAX */

  enum {
    "HEADER_NAX"               = 0,
    "HEADER_NAX_FILL"          = 1,
    "HEADER_NAX_CTR"           = 2,
    "HEADER_NAX_FILL3"         = 3,
    "HEADER_NAX_CTR_FILL2"     = 4,
    "HEADER_NAX_LEN"           = 5,
    "HEADER_NAX_CTR_LEN"       = 6,
    "HEADER_NAX_FILL2_LEN"     = 7,
    "HEADER_NAX_CTR_FILL_LEN"  = 8
  };


  enum {
    "PACKET_ALIGNMENT_8"  = 0,
    "PACKET_ALIGNMENT_16" = 1,
    "PACKET_ALIGNMENT_32" = 2
  };

  taggedunion {
    block "INITIAL_CMD_BUFFER" struct buffer;
  };

  taggedunion {
    block "INITIAL_RES_ERR_BUFFER" struct buffer;
  };

  taggedstruct {
    (block "POOL_BUFFER" struct buffer)*;
  };

  taggedstruct {
    ("OPTIONAL_TL_SUBCMD" enum { /* XCP-Code of optional transport layer */
                                 /* specific subcommand supported by the slave */
      "FLX_ASSIGN"               = 0xFF,
      "FLX_ACTIVATE"             = 0xFE,
      "FLX_DEACTIVATE"           = 0xFD,
      "GET_DAQ_FLX_BUF"          = 0xFC,
      "SET_DAQ_FLX_BUF"          = 0xFB,
      "GET_DAQ_CLOCK_MULTICAST"  = 0xFA
    })*;
  };
};

/************************* end of FLX **********************/
